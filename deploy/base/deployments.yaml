apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubelet-serving-cert-approver
  labels:
    app.kubernetes.io/instance: kubelet-serving-cert-approver
    app.kubernetes.io/name: kubelet-serving-cert-approver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-serving-cert-approver
      app.kubernetes.io/name: kubelet-serving-cert-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-serving-cert-approver
        app.kubernetes.io/name: kubelet-serving-cert-approver
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist
      serviceAccountName: kubelet-serving-cert-approver
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      priorityClassName: system-cluster-critical
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      containers:
        - name: cert-approver
          image: ghcr.io/alex1989hu/kubelet-serving-cert-approver:0.8.6
          imagePullPolicy: Always
          args:
          - serve
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 250m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 16Mi
          ports:
          - name: health
            containerPort: 8080
          - name: metrics
            containerPort: 9090
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 6
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 3
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
              - ALL
