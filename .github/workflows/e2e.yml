name: e2e-test
on:
  push:
    branches:
    - "*"
  pull_request:
jobs:
  e2e-test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        node:
        - v1.19.16
        - v1.20.15
        - v1.21.12
        - v1.22.9
        - v1.23.6
        - v1.24.2
        install-mode:
        - ha
        - standalone
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3.0
      with:
        version: ${{ matrix.node }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.0.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.0.0
    - name: Build Container Image
      uses: docker/build-push-action@v3.1.1
      with:
        context: .
        file: ./Dockerfile
        load: true
        platforms: linux/amd64
        push: false
        tags: ghcr.io/${{ github.repository }}:ci
    - name: Set up KinD
      uses: engineerd/setup-kind@v0.5.0
      with:
        config: ./hack/e2e-kind-config.yaml
        image: kindest/node:${{ matrix.node }}
        version: "v0.14.0"
    - name: Wait for KiND readiness
      run: |
          kubectl --namespace kube-system wait --for=condition=ready pod -l tier=control-plane --timeout=300s
          kubectl get nodes -o wide
    - name: Load image on the nodes of the KinD
      run: |
          kind load docker-image ghcr.io/${{ github.repository }}:ci
    - name: Patch Install Manifests
      run: |
          sed -i -e 's@imagePullPolicy: Always@imagePullPolicy: IfNotPresent@g' ./deploy/${{ matrix.install-mode }}-install.yaml
          sed -i -e 's@image: .*@image: ghcr.io/${{ github.repository }}:ci@g' ./deploy/${{ matrix.install-mode }}-install.yaml
    - name: Deploy Application
      id: deployment
      run: |
        kubectl apply -f ./deploy/${{ matrix.install-mode }}-install.yaml
        count=0
        until [[ $(kubectl --namespace kubelet-serving-cert-approver get pod --selector app.kubernetes.io/name=kubelet-serving-cert-approver 2>/dev/null) ]]; do
          count=$((count + 1))
          if [[ "${count}" -eq "150" ]]; then
            echo 'Wait Timeout exceeded' >&3
            return 1
          fi
            sleep 2
        done
        kubectl --namespace kubelet-serving-cert-approver wait --for=condition=ready pod --selector app.kubernetes.io/name=kubelet-serving-cert-approver --timeout=300s
    - name: Get deployment failure logs
      if: ${{ failure() && steps.deployment.outputs.exit_code != 0 }}
      run: |
        kubectl --namespace kubelet-serving-cert-approver get events
        kubectl --namespace kubelet-serving-cert-approver describe deployments kubelet-serving-cert-approver
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.5
    - name: Test Approved Certificate Signing Requests
      run: go test -tags=e2e -v ./e2e
    - name: Get Application logs
      if: ${{ always() }}
      run: |
        kubectl --namespace kubelet-serving-cert-approver logs --selector app.kubernetes.io/name=kubelet-serving-cert-approver --prefix
